#!/bin/bash
#Package of your endpoints
package=*myPackage*
#Name of project
project=*myProject*
#Version of project
version=*myVersion*

#endpoints-framework-tools Path for tools
#See documentations https://cloud.google.com/endpoints/docs/frameworks/java/generate-client-libraries-android
tool=~/Documents/workspace/sdk/endpoints-framework-tools-2.0.0-beta.7/bin/endpoints-framework-tools

#mvn tasks
mvn clean install

#Create directory if doesn't exist
mkdir -p generatedEndpoints

#Replace all . by / to find directory
path="${package//\./\/}"
echo "$(ls -f src/main/java/$path/* | wc -l) endpoints to generate founded"

for file in src/main/java/$path/*
do
    basename=$(basename "$file")
    echo ${basename%.*}
    echo $package"."${basename%.*}
    $tool get-client-lib --war=target/$project-$version/ -bs maven -o ./generatedEndpoints $package"."${basename%.*}
done

#generate swagger doc
$tool get-swagger-doc --hostname=$project.appspot.com --war=target/$project-$version $allEndpoints
#deploy swagger doc
gcloud service-management deploy swagger.json

echo "All endpoints are ready"
echo "Just unzip them"
cd ./generatedEndpoints
for file in ./*.zip
do
    unzip -P pcp9100 -o -q $file
    basename=$(basename "$file")
    IFS='-' read -r -a array <<< "${basename%.*}"
    cd ${array[0]}
    mvn clean install
    cd ..
done
cd ..

#Deploy project on your server
mvn appengine:deploy
#For queue
#mvn appengine:deployQueue
#For Cron task
#mvn appengine:deployCron
